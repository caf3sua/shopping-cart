-- Drop table
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS FAQ;
DROP TABLE IF EXISTS OrderDetail;
DROP TABLE IF EXISTS OrderProduct;
DROP TABLE IF EXISTS UserRole;
DROP TABLE IF EXISTS Role;
DROP TABLE IF EXISTS User;
DROP TABLE IF EXISTS ShoppingCart;
DROP TABLE IF EXISTS ProductAttribute;
DROP TABLE IF EXISTS Attribute;
DROP TABLE IF EXISTS Product;
DROP TABLE IF EXISTS Category;
DROP TABLE IF EXISTS Brand;
DROP TABLE IF EXISTS OrderStatus;

-- Create table
CREATE TABLE CUSTOMER (
  ID bigint PRIMARY KEY,
  FIRSTNAME varchar(50) NOT NULL,
  LASTNAME varchar(100) NOT NULL,
  EMAIL varchar(100),
  PASSWORD varchar(100)
);

CREATE TABLE FAQ (
  ID INTEGER PRIMARY KEY,
  QUESTION varchar(255) NOT NULL,
  ANSWER LONGVARCHAR NOT NULL,
  Active tinyint default 1
);

CREATE TABLE OrderStatus (
  ID INTEGER PRIMARY KEY,
  NAME varchar(40) NOT NULL,
  DESCRIPTION varchar(255),
  Active tinyint default 1
);

CREATE TABLE Role (
  RoleId INTEGER PRIMARY KEY,
  RoleName varchar(40) NOT NULL,
  DESCRIPTION varchar(255),
  Active tinyint default 1
);

CREATE TABLE User (
  UserId INTEGER PRIMARY KEY,
  UserName varchar(40) NOT NULL,
  Password varchar(60),
  FirstName varchar(120),
  LastName varchar(120),
  Address varchar(255),
  Email varchar(120),
  Active tinyint default 1
);

CREATE TABLE UserRole (
  Id INTEGER PRIMARY KEY,
  UserId INTEGER,
  RoleId INTEGER,
  CONSTRAINT FK_user_roles UNIQUE (UserId, RoleId),
  CONSTRAINT FK_UR_U FOREIGN KEY (UserId) REFERENCES User (UserId),
  CONSTRAINT FK_UR_R FOREIGN KEY (RoleId) REFERENCES Role (RoleId)
);

CREATE TABLE Category (
  Id INTEGER PRIMARY KEY,
  CategoryName varchar(120) NOT NULL,
  CategoryCode varchar(40),
  Image varchar(255),
  Description LONGVARCHAR,
  Active tinyint default 1
);

CREATE TABLE Brand (
  Id INTEGER PRIMARY KEY,
  BrandName varchar(120) NOT NULL,
  BrandCode varchar(40),
  ImageLogo varchar(255),
  Description varchar(255),
  Active tinyint default 1
);

CREATE TABLE Product (
  Id INTEGER  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL PRIMARY KEY,
  Name varchar(120) NOT NULL,
  Code varchar(40),
  PurchasePrice DECIMAL(10,2),
  SalePrice DECIMAL(10,2),
  BrandId INTEGER,
  CategoryId INTEGER,
  Quantity BIGINT Not null,
  Description LONGVARCHAR,
  Image varchar(255),
  Active tinyint default 1,
  CONSTRAINT FK_P_BRA FOREIGN KEY (BrandId) REFERENCES Brand (Id),
  CONSTRAINT FK_P_CAT FOREIGN KEY (CategoryId) REFERENCES Category (Id)
);

CREATE TABLE ShoppingCart (
  Id INTEGER PRIMARY KEY,
  SessionId varchar(60) NOT NULL,
  LastUpdate Timestamp,
  ProductId INTEGER NOT NULL,
  Quantity BIGINT Not null,
  Price DECIMAL(10,2),
  Active tinyint default 1,
  CONSTRAINT FK_SC_PRO FOREIGN KEY (ProductId) REFERENCES Product (Id)
);

CREATE TABLE Attribute (
  Id INTEGER PRIMARY KEY,
  AttributeName varchar(120),
  AttributeValue varchar(255),
  Description varchar(255),
  Active tinyint default 1
);

CREATE TABLE ProductAttribute (
  ProductId INTEGER NOT NULL,
  AttributeId INTEGER NOT NULL,
  Active tinyint default 1,
  CONSTRAINT FK_PA_PRO FOREIGN KEY (ProductId) REFERENCES Product (Id),
  CONSTRAINT FK_PA_ATT FOREIGN KEY (AttributeId) REFERENCES Attribute (Id)
);

CREATE TABLE OrderProduct (
  OrderId INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL PRIMARY KEY  ,
  UserId INTEGER,
  OrderDate Timestamp,
  OrderAmount DECIMAL(10,2),
  Discount INTEGER,
  ShippingAmount DECIMAL(10,2),
  TaxAmount DECIMAL(10,2),
  NetAmount DECIMAL(10,2),
  ShippingDate Timestamp,
  ShippingAddress varchar(255),
  BillingAddress varchar(255),
  StatusId INTEGER,
  Active tinyint default 1,
  CONSTRAINT FK_ORDPRO_USR FOREIGN KEY (UserId) REFERENCES User (UserId),
  CONSTRAINT FK_ORDPRO_STA FOREIGN KEY (StatusId) REFERENCES OrderStatus (Id)
);

CREATE TABLE OrderDetail (
  Id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL PRIMARY KEY  ,
  OrderId INTEGER,
  ProductId INTEGER NOT NULL,
  ProductPrice DECIMAL(10,2),
  Quantity BIGINT,
  Discount INTEGER,
  Active tinyint default 1,
  CONSTRAINT FK_ORDEA_ORD FOREIGN KEY (OrderId) REFERENCES OrderProduct (OrderId),
  CONSTRAINT FK_ORDEA_PRO FOREIGN KEY (ProductId) REFERENCES Product (Id)
);

-- Create INDEX
create unique index IND_ORD_STA_NAM on OrderStatus(NAME);
create unique index IND_USR_NAM on User(UserName);
create unique index IND_CAT_COD on Category(CategoryCode);
create index IND_CAT_NAM on Category(CategoryName);
create unique index IND_BRD_COD on Brand(BrandCode);
create index IND_BRD_NAM on Brand(BrandName);
create index IND_PRO_NAM on Product(Name);
create unique index IND_PRO_COD on Product(Code);
create index IND_SHO_NAM on ShoppingCart(SessionId);
create index IND_ATT_NAM on Attribute(AttributeName);
create index IND_ATT_VAL on Attribute(AttributeValue);